
stages:
  - build
  - test
  - coverage

linux-build:
  stage: build
  tags:
    - linux
  script:
    - premake5 gmake2
    - make -j4
  artifacts:
    expire_in: 2 days
    paths:
      - bin/

windows-build:
  stage: build
  tags:
    - windows
  script:
    - premake5 vs2022
    - '& "${Env:ProgramFiles}\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\amd64\msbuild.exe"'
  artifacts:
    expire_in: 2 days
    paths:
      - bin/

documentation-job:
  stage: build
  script:
    - doxygen doc/Doxyfile
    # commented out because it fails the build due to missing permissions
    - rm -rf /mnt/doxygenDocu/gatery/*
    - mv doc/gen/html/ /mnt/doxygenDocu/gatery
  only:
    - master

test-linux-frontend:
  stage: test
  tags:
    - linux
  script:
    - bin/linux-x86_64-Debug/gatery-frontend-test

test-linux-scl:
  stage: test
  tags:
    - linux
  script:
    - bin/linux-x86_64-Debug/gatery-scl-test

test-windows-frontend:
  stage: test
  tags:
    - windows
  script:
    - .\bin\windows-x86_64-Debug\gatery-frontend-test.exe

test-windows-scl:
  stage: test
  tags:
    - windows
  script:
    - .\bin\windows-x86_64-Debug\gatery-scl-test.exe

test-linux-coverage:
  stage: coverage
  tags:
    - linux
  script:
    - premake5 gmake2
    - /usr/bin/time -o buildLog.txt -v make -j4 config=coverage
    - mkdir cov
    - anybadge -l "Build time (seconds)" -v $(cat buildLog.txt | grep "User time (seconds):" | cut -d' ' -f 4) --file cov/buildTime.svg
    - anybadge -l "Build max RSS (kB)" -v $(cat buildLog.txt | grep "Maximum resident set size (kbytes)" | cut -d' ' -f 6) --file cov/buildMaxRSS.svg
    - lcov --directory . --zerocounters
    - bin/linux-x86_64-Coverage/gatery-frontend-test -- --intel /opt/simModels/intel/ --xilinx /opt/simModels/xilinx/
    - bin/linux-x86_64-Coverage/gatery-scl-test -- --intel /opt/simModels/intel/ --xilinx /opt/simModels/xilinx/
    - lcov --directory . --capture --output-file unittest_coverage.info
    - lcov --remove unittest_coverage.info '/usr/*' --output-file unittest_coverage.info
    - lcov --remove unittest_coverage.info '*/source/external/*' --output-file unittest_coverage.info
    - anybadge --value=$(lcov --summary unittest_coverage.info | grep lines | cut -d' ' -f 4 | cut -d'%' -f 1) --file cov/coverage.svg coverage
    - genhtml unittest_coverage.info -o cov/
    - rm -rf /mnt/doxygenDocu/gateryCov/*
    - cp -r cov/ /mnt/doxygenDocu/gateryCov
  artifacts:
    expire_in: 4 weeks
    paths:
        - cov/